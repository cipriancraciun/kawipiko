#!/dev/null




<< workspace / initialize
	test "${#}" -eq 0
	"${ZRUN[@]}" ':: workspace / initialize / outputs'
	"${ZRUN[@]}" ':: workspace / initialize / go'
!!




<< workspace / initialize / outputs
	test "${#}" -eq 0
	
	if test ! -d ./.outputs ; then
		if test -h ./.outputs ; then
			_outputs_store="$( exec -- readlink -f -- ./.outputs )"
		else
			_outputs_store="${TMPDIR:-/tmp}/workspace--${UID}--${RANDOM}-${RANDOM}-${RANDOM}-${RANDOM}"
		fi
		mkdir -- "${_outputs_store}"
		if test ! -e ./.outputs ; then
			_outputs_store="$( exec -- readlink -e -- "${_outputs_store}" )"
			ln -s -f -T -- "${_outputs_store}" ./.outputs
		fi
	fi
	
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	
	_folders=(
			binaries
			binaries/debug
			binaries/release
			binaries/publish
			binaries/analyze
			examples
			markers
		)
	
	for _folder in "${_folders[@]}" ; do
		if test ! -e "${_outputs}/${_folder}" ; then
			mkdir -- "${_outputs}/${_folder}"
		fi
	done
!!




<< workspace / initialize / go / clean
	test "${#}" -eq 0
	
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	if test -d "${_outputs}/go" ; then
		chmod -R +w -- "${_outputs}/go"
	fi
	
	rm -R -- "${_outputs}/go"
	
	exec -- "${ZRUN[@]}" ':: workspace / initialize / go'
!!




<< workspace / initialize / go
	test "${#}" -eq 0
	
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	_sources="$( exec -- readlink -e -- ./sources )"
	
	GOPATH="${_outputs}/go"
	GOBIN="${_outputs}/go/bin"
	GOTMPDIR="${_outputs}/go/tmp"
	GOCACHE="${_outputs}/go/cache"
	_gosrc="${_outputs}/go/src"
	_gopkg="${_outputs}/go/pkg"
	
	_folders=(
			"${GOPATH}"
			"${GOBIN}"
			"${GOTMPDIR}"
			"${GOCACHE}"
			"${_gosrc}"
			"${_gopkg}"
		)
	
	for _folder in "${_folders[@]}" ; do
		if test ! -e "${_folder}" ; then
			mkdir -- "${_folder}"
		fi
	done
!!




<< workspace / initialize / python
	test "${#}" -eq 0
	
	if test -d ./.outputs/python ; then
		exit -- 0
	fi
	
	test -d ./.outputs
	mkdir -- ./.outputs/python
	
	virtualenv-3.8 \
			--python python3.8 \
			--clear \
			--symlinks \
			--no-setuptools \
			--no-wheel \
			--no-download \
			-- \
			./.outputs/python \
	#
	
	./.outputs/python/bin/pip install --upgrade --compile -- pip
	./.outputs/python/bin/pip install --upgrade --compile -- wheel
	./.outputs/python/bin/pip install --upgrade --compile -- setuptools
	
	./.outputs/python/bin/pip install --compile -- docutils
	./.outputs/python/bin/pip install --compile -- restview
!!

